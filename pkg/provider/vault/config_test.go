package vault

import (
	"testing"

	"github.com/bank-vaults/secrets-webhook/pkg/common"
	"github.com/slok/kubewebhook/v2/pkg/model"
	"github.com/stretchr/testify/assert"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func TestLoadConfig(t *testing.T) {
	tests := []struct {
		name        string
		annotations map[string]string
		want        map[string]string
	}{
		{
			name: "Handle deprecated annotations all",
			annotations: map[string]string{
				common.VaultAddrAnnotationDeprecated:                                 "http://vault.example.com",
				common.VaultImageAnnotationDeprecated:                                "vault:latest",
				common.VaultImagePullPolicyAnnotationDeprecated:                      "IfNotPresent",
				common.VaultRoleAnnotationDeprecated:                                 "my-vault-role",
				common.VaultPathAnnotationDeprecated:                                 "secret/data/myapp/config",
				common.VaultSkipVerifyAnnotationDeprecated:                           "true",
				common.VaultTLSSecretAnnotationDeprecated:                            "vault-tls",
				common.VaultIgnoreMissingSecretsAnnotationDeprecated:                 "false",
				common.VaultClientTimeoutAnnotationDeprecated:                        "30s",
				common.VaultTransitKeyIDAnnotationDeprecated:                         "transit-key-id",
				common.VaultTransitPathAnnotationDeprecated:                          "transit/keys/mykey",
				common.VaultAuthMethodAnnotationDeprecated:                           "kubernetes",
				common.VaultTransitBatchSizeAnnotationDeprecated:                     "64",
				common.VaultTokenAuthMountAnnotationDeprecated:                       "token",
				common.VaultServiceaccountAnnotationDeprecated:                       "vault-auth",
				common.VaultNamespaceAnnotationDeprecated:                            "vault-namespace",
				common.VaultServiceAccountTokenVolumeNameAnnotationDeprecated:        "vault-token",
				common.VaultLogLevelAnnotationDeprecated:                             "debug",
				common.VaultEnvPassthroughAnnotationDeprecated:                       "VAULT_SKIP_VERIFY,VAULT_ADDR",
				common.VaultEnvFromPathAnnotationDeprecated:                          "secret/data/myapp/env",
				common.VaultAgentAnnotationDeprecated:                                "true",
				common.VaultAgentConfigmapAnnotationDeprecated:                       "vault-agent-config",
				common.VaultAgentOnceAnnotationDeprecated:                            "false",
				common.VaultAgentShareProcessNamespaceAnnotationDeprecated:           "true",
				common.VaultAgentCPUAnnotationDeprecated:                             "100m",
				common.VaultAgentCPULimitAnnotationDeprecated:                        "200m",
				common.VaultAgentCPURequestAnnotationDeprecated:                      "100m",
				common.VaultAgentMemoryAnnotationDeprecated:                          "128Mi",
				common.VaultAgentMemoryLimitAnnotationDeprecated:                     "256Mi",
				common.VaultAgentMemoryRequestAnnotationDeprecated:                   "128Mi",
				common.VaultConfigfilePathAnnotationDeprecated:                       "/etc/vault/config.json",
				common.VaultAgentEnvVariablesAnnotationDeprecated:                    "VAULT_SKIP_VERIFY=true",
				common.VaultConsulTemplateConfigmapAnnotationDeprecated:              "consul-template-config",
				common.VaultConsulTemplateImageAnnotationDeprecated:                  "consul-template:latest",
				common.VaultConsulTemplateOnceAnnotationDeprecated:                   "false",
				common.VaultConsulTemplatePullPolicyAnnotationDeprecated:             "IfNotPresent",
				common.VaultConsulTemplateShareProcessNamespaceAnnotationDeprecated:  "true",
				common.VaultConsulTemplateCPUAnnotationDeprecated:                    "100m",
				common.VaultConsulTemplateMemoryAnnotationDeprecated:                 "128Mi",
				common.VaultConsulTemplateSecretsMountPathAnnotationDeprecated:       "/etc/secrets",
				common.VaultConsulTemplateInjectInInitcontainersAnnotationDeprecated: "true",
			},
			want: map[string]string{
				common.VaultAddrAnnotation:                                 "http://vault.example.com",
				common.VaultImageAnnotation:                                "vault:latest",
				common.VaultImagePullPolicyAnnotation:                      "IfNotPresent",
				common.VaultRoleAnnotation:                                 "my-vault-role",
				common.VaultPathAnnotation:                                 "secret/data/myapp/config",
				common.VaultSkipVerifyAnnotation:                           "true",
				common.VaultTLSSecretAnnotation:                            "vault-tls",
				common.VaultIgnoreMissingSecretsAnnotation:                 "false",
				common.VaultClientTimeoutAnnotation:                        "30s",
				common.VaultTransitKeyIDAnnotation:                         "transit-key-id",
				common.VaultTransitPathAnnotation:                          "transit/keys/mykey",
				common.VaultAuthMethodAnnotation:                           "kubernetes",
				common.VaultTransitBatchSizeAnnotation:                     "64",
				common.VaultTokenAuthMountAnnotation:                       "token",
				common.VaultServiceaccountAnnotation:                       "vault-auth",
				common.VaultNamespaceAnnotation:                            "vault-namespace",
				common.VaultServiceAccountTokenVolumeNameAnnotation:        "vault-token",
				common.VaultLogLevelAnnotation:                             "debug",
				common.VaultPassthroughAnnotation:                          "VAULT_SKIP_VERIFY,VAULT_ADDR",
				common.VaultFromPathAnnotation:                             "secret/data/myapp/env",
				common.VaultAgentAnnotation:                                "true",
				common.VaultAgentConfigmapAnnotation:                       "vault-agent-config",
				common.VaultAgentOnceAnnotation:                            "false",
				common.VaultAgentShareProcessNamespaceAnnotation:           "true",
				common.VaultAgentCPUAnnotation:                             "100m",
				common.VaultAgentCPULimitAnnotation:                        "200m",
				common.VaultAgentCPURequestAnnotation:                      "100m",
				common.VaultAgentMemoryAnnotation:                          "128Mi",
				common.VaultAgentMemoryLimitAnnotation:                     "256Mi",
				common.VaultAgentMemoryRequestAnnotation:                   "128Mi",
				common.VaultConfigfilePathAnnotation:                       "/etc/vault/config.json",
				common.VaultAgentEnvVariablesAnnotation:                    "VAULT_SKIP_VERIFY=true",
				common.VaultConsulTemplateConfigmapAnnotation:              "consul-template-config",
				common.VaultConsulTemplateImageAnnotation:                  "consul-template:latest",
				common.VaultConsulTemplateOnceAnnotation:                   "false",
				common.VaultConsulTemplatePullPolicyAnnotation:             "IfNotPresent",
				common.VaultConsulTemplateShareProcessNamespaceAnnotation:  "true",
				common.VaultConsulTemplateCPUAnnotation:                    "100m",
				common.VaultConsulTemplateMemoryAnnotation:                 "128Mi",
				common.VaultConsulTemplateSecretsMountPathAnnotation:       "/etc/secrets",
				common.VaultConsulTemplateInjectInInitcontainersAnnotation: "true",
			},
		},
		{
			name: "Handle deprecated annotations mixed",
			annotations: map[string]string{
				common.VaultAddrAnnotationDeprecated:                                 "https://vault.newexample.com",
				common.VaultImageAnnotation:                                          "vault:1.7.0",
				common.VaultImagePullPolicyAnnotationDeprecated:                      "Always",
				common.VaultRoleAnnotationDeprecated:                                 "new-vault-role",
				common.VaultPathAnnotation:                                           "secret/data/newapp/config",
				common.VaultSkipVerifyAnnotation:                                     "false",
				common.VaultTLSSecretAnnotationDeprecated:                            "new-vault-tls",
				common.VaultIgnoreMissingSecretsAnnotation:                           "true",
				common.VaultClientTimeoutAnnotationDeprecated:                        "45s",
				common.VaultTransitKeyIDAnnotation:                                   "new-transit-key-id",
				common.VaultTransitPathAnnotationDeprecated:                          "transit/keys/newkey",
				common.VaultAuthMethodAnnotation:                                     "jwt",
				common.VaultTransitBatchSizeAnnotationDeprecated:                     "32",
				common.VaultTokenAuthMountAnnotation:                                 "new-token",
				common.VaultServiceaccountAnnotationDeprecated:                       "new-vault-auth",
				common.VaultNamespaceAnnotation:                                      "new-vault-namespace",
				common.VaultServiceAccountTokenVolumeNameAnnotationDeprecated:        "new-vault-token",
				common.VaultLogLevelAnnotation:                                       "info",
				common.VaultEnvPassthroughAnnotationDeprecated:                       "VAULT_ADDR,VAULT_NAMESPACE",
				common.VaultEnvFromPathAnnotationDeprecated:                          "secret/data/newapp/env",
				common.VaultAgentAnnotationDeprecated:                                "false",
				common.VaultAgentConfigmapAnnotation:                                 "new-vault-agent-config",
				common.VaultAgentOnceAnnotation:                                      "true",
				common.VaultAgentShareProcessNamespaceAnnotationDeprecated:           "false",
				common.VaultAgentCPUAnnotation:                                       "200m",
				common.VaultAgentCPULimitAnnotationDeprecated:                        "400m",
				common.VaultAgentCPURequestAnnotation:                                "200m",
				common.VaultAgentMemoryAnnotation:                                    "256Mi",
				common.VaultAgentMemoryLimitAnnotationDeprecated:                     "512Mi",
				common.VaultAgentMemoryRequestAnnotation:                             "256Mi",
				common.VaultConfigfilePathAnnotationDeprecated:                       "/etc/new-vault/config.json",
				common.VaultAgentEnvVariablesAnnotation:                              "VAULT_NAMESPACE=new-vault-namespace",
				common.VaultConsulTemplateConfigmapAnnotationDeprecated:              "new-consul-template-config",
				common.VaultConsulTemplateImageAnnotation:                            "consul-template:0.25.0",
				common.VaultConsulTemplateOnceAnnotation:                             "true",
				common.VaultConsulTemplatePullPolicyAnnotationDeprecated:             "Never",
				common.VaultConsulTemplateShareProcessNamespaceAnnotation:            "false",
				common.VaultConsulTemplateCPUAnnotation:                              "150m",
				common.VaultConsulTemplateMemoryAnnotationDeprecated:                 "192Mi",
				common.VaultConsulTemplateSecretsMountPathAnnotation:                 "/etc/new-secrets",
				common.VaultConsulTemplateInjectInInitcontainersAnnotationDeprecated: "false",
			},
			want: map[string]string{
				common.VaultAddrAnnotation:                                 "https://vault.newexample.com",
				common.VaultImageAnnotation:                                "vault:1.7.0",
				common.VaultImagePullPolicyAnnotation:                      "Always",
				common.VaultRoleAnnotation:                                 "new-vault-role",
				common.VaultPathAnnotation:                                 "secret/data/newapp/config",
				common.VaultSkipVerifyAnnotation:                           "false",
				common.VaultTLSSecretAnnotation:                            "new-vault-tls",
				common.VaultIgnoreMissingSecretsAnnotation:                 "true",
				common.VaultClientTimeoutAnnotation:                        "45s",
				common.VaultTransitKeyIDAnnotation:                         "new-transit-key-id",
				common.VaultTransitPathAnnotation:                          "transit/keys/newkey",
				common.VaultAuthMethodAnnotation:                           "jwt",
				common.VaultTransitBatchSizeAnnotation:                     "32",
				common.VaultTokenAuthMountAnnotation:                       "new-token",
				common.VaultServiceaccountAnnotation:                       "new-vault-auth",
				common.VaultNamespaceAnnotation:                            "new-vault-namespace",
				common.VaultServiceAccountTokenVolumeNameAnnotation:        "new-vault-token",
				common.VaultLogLevelAnnotation:                             "info",
				common.VaultPassthroughAnnotation:                          "VAULT_ADDR,VAULT_NAMESPACE",
				common.VaultFromPathAnnotation:                             "secret/data/newapp/env",
				common.VaultAgentAnnotation:                                "false",
				common.VaultAgentConfigmapAnnotation:                       "new-vault-agent-config",
				common.VaultAgentOnceAnnotation:                            "true",
				common.VaultAgentShareProcessNamespaceAnnotation:           "false",
				common.VaultAgentCPUAnnotation:                             "200m",
				common.VaultAgentCPULimitAnnotation:                        "400m",
				common.VaultAgentCPURequestAnnotation:                      "200m",
				common.VaultAgentMemoryAnnotation:                          "256Mi",
				common.VaultAgentMemoryLimitAnnotation:                     "512Mi",
				common.VaultAgentMemoryRequestAnnotation:                   "256Mi",
				common.VaultConfigfilePathAnnotation:                       "/etc/new-vault/config.json",
				common.VaultAgentEnvVariablesAnnotation:                    "VAULT_NAMESPACE=new-vault-namespace",
				common.VaultConsulTemplateConfigmapAnnotation:              "new-consul-template-config",
				common.VaultConsulTemplateImageAnnotation:                  "consul-template:0.25.0",
				common.VaultConsulTemplateOnceAnnotation:                   "true",
				common.VaultConsulTemplatePullPolicyAnnotation:             "Never",
				common.VaultConsulTemplateShareProcessNamespaceAnnotation:  "false",
				common.VaultConsulTemplateCPUAnnotation:                    "150m",
				common.VaultConsulTemplateMemoryAnnotation:                 "192Mi",
				common.VaultConsulTemplateSecretsMountPathAnnotation:       "/etc/new-secrets",
				common.VaultConsulTemplateInjectInInitcontainersAnnotation: "false",
			},
		},
	}

	for _, tt := range tests {
		ttp := tt
		t.Run(ttp.name, func(t *testing.T) {
			configWant, err := LoadConfig(&metav1.ObjectMeta{Annotations: ttp.want}, &model.AdmissionReview{})
			assert.NoError(t, err)

			configGot, err := LoadConfig(&metav1.ObjectMeta{Annotations: ttp.annotations}, &model.AdmissionReview{})
			assert.NoError(t, err)

			assert.Equal(t, configWant, configGot)
		})
	}
}
