apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-secrets-seccontext
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-secrets-seccontext
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-secrets-seccontext
      annotations:
        secrets-webhook.security.bank-vaults.io/provider: "vault"
        secrets-webhook.security.bank-vaults.io/vault-addr: "https://vault:8200"
        secrets-webhook.security.bank-vaults.io/vault-tls-secret: vault-tls
        # secrets-webhook.security.bank-vaults.io/vault-skip-verify: "false"
        # secrets-webhook.security.bank-vaults.io/vault-role: "default"
        # secrets-webhook.security.bank-vaults.io/vault-path: "kubernetes"
        # secrets-webhook.security.bank-vaults.io/vault-agent: "true"
    spec:
      securityContext:
        runAsUser: 1000
      initContainers:
        - name: init-ubuntu
          image: ubuntu
          command: ["sh", "-c", "echo $AWS_SECRET_ACCESS_KEY && echo initContainers ready"]
          env:
            - name: AWS_SECRET_ACCESS_KEY
              value: vault:secret/data/accounts/aws#AWS_SECRET_ACCESS_KEY
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
      containers:
        - name: alpine
          image: alpine
          command: ["sh", "-c", "echo $AWS_SECRET_ACCESS_KEY && echo going to sleep... && sleep 10000"]
          env:
            - name: AWS_SECRET_ACCESS_KEY
              value: vault:secret/data/accounts/aws#AWS_SECRET_ACCESS_KEY
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
